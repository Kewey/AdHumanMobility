stages:
  - build
  - review
  - security
  - quality
  - test
  - deploy

# Global variables
variables:
  GIT_STRATEGY: none

# Stage BUILD
## Job BUILD
build:adhmapi:
  stage: build
  tags:
    - docker-build
  variables:
    GIT_STRATEGY: fetch
  script:
    # Connect to the registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.git.dotsafe.fr
    # Retrieve develop if exists
    - docker pull $CI_REGISTRY_IMAGE/adhmapi:master || true
    # Build and use cache from develop build
    - >-
      docker build
      --cache-from $CI_REGISTRY_IMAGE/adhmapi:master
      --rm=false
      -t $CI_REGISTRY_IMAGE/adhmapi:${CI_COMMIT_REF_SLUG}
      --target prod
      --file docker/adhmapi/Dockerfile
      .
    # Make sure we're still connected to the registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.git.dotsafe.fr
    # Push the image
    - docker push $CI_REGISTRY_IMAGE/adhmapi:${CI_COMMIT_REF_SLUG}

build:adhm:
  stage: build
  tags:
    - docker-build
  variables:
    GIT_STRATEGY: fetch
  script:
    # Connect to the registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.git.dotsafe.fr
    # Retrieve develop if exists
    - docker pull $CI_REGISTRY_IMAGE/adhm:master || true
    # Build and use cache from develop build
    - >-
      docker build
      --cache-from $CI_REGISTRY_IMAGE/adhm:master
      --rm=false
      -t $CI_REGISTRY_IMAGE/adhm:${CI_COMMIT_REF_SLUG}
      --target prod
      --file docker/adhm/Dockerfile
      .
    # Make sure we're still connected to the registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.git.dotsafe.fr
    # Push the image
    - docker push $CI_REGISTRY_IMAGE/adhm:${CI_COMMIT_REF_SLUG}

.dockerjob:
  only:
    - branches
  tags:
    - docker

.adhmapijob:
  extends: .dockerjob
  needs:
    - build:adhmapi
  image:
    name: $CI_REGISTRY_IMAGE/adhmapi:${CI_COMMIT_REF_SLUG}
    entrypoint: ['']

review:
  stage: review
  image: registry.git.dotsafe.fr/dotsafe/ci-helper/ci-helper:master
  tags:
    - docker
  variables:
    GIT_STRATEGY: none
    ROADIE_URL: 'https://api.roadie.dotsafe.fr'
  script:
    - export PROJECT_URL=git@git.dotsafe.fr:$CI_PROJECT_PATH.git
    - export SYSTEM_NAME=`ci-helper slugify "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}" --trim-output`
    - export APP_DOMAIN="$CI_COMMIT_REF_SLUG-$CI_PROJECT_ID.review.dotsafe.fr"
    - >-
      ci-helper roadie:environment:create-or-update
      --system-name="$SYSTEM_NAME"
      --name="${CI_PROJECT_NAME} - ${CI_COMMIT_REF_NAME}"
      --repository-url="$PROJECT_URL"
      --ref="$CI_COMMIT_REF_NAME"
      --host="adhm=$APP_DOMAIN"
      --host="adhmAPI=api.$APP_DOMAIN"
      --host="PHPMYADMIN=phpmyadmin-$APP_DOMAIN"
      --host="MAILCATCHER=mailcatcher-$APP_DOMAIN"
      --env="APP_VERSION=$CI_COMMIT_REF_SLUG"
      --env="APP_DOMAIN=$APP_DOMAIN"
      --url="PHPMYADMIN=https://phpmyadmin-$APP_DOMAIN"
      --url="MAILCATCHER=https://mailcatcher-$APP_DOMAIN"
  rules:
    - if: '$CI_COMMIT_REF_NAME != "master"'
      when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_COMMIT_REF_SLUG-$CI_PROJECT_NAME-$CI_PROJECT_ID.review.dotsafe.fr

# Stage SECURITY
## Jobs SECURITY VULNERABILITIES
security:vulnerabilities:
  extends: .adhmapijob
  stage: security
  allow_failure: true
  script:
    - cd /var/www && local-php-security-checker

# Stage QUALITY
## Job QUALITY LINT
quality:lint:
  extends: .adhmapijob
  stage: quality
  script:
    - cd /var/www && php vendor/bin/php-cs-fixer fix --dry-run --verbose

## Job QUALITY PHPSTAN
quality:phpstan:
  extends: .adhmapijob
  stage: quality
  script:
    - cd /var/www && php vendor/bin/phpstan analyse src -l 5 --no-progress

deploy:
  stage: deploy
  needs:
    - build:adhm
    - build:adhmapi
  image: alpine
  tags:
    - docker
  variables:
    ANSIBLE_HOST_KEY_CHECKING: 'False'
    GIT_STRATEGY: fetch
  before_script:
    # add openssh
    - apk add --update openssh ansible
    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)
    # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - echo "$DEPLOY_SSH_PRIVATE_KEY" >/tmp/deploy.key
    - chmod 600 /tmp/deploy.key
    - ssh-add /tmp/deploy.key
  script:
    - echo "$ANSIBLE_VAULT_PASSWORD" > ansible/.vault
    - >-
      ansible-playbook
      --private-key /tmp/deploy.key
      --vault-password-file ansible/.vault
      -e "APP_VERSION=$CI_COMMIT_REF_SLUG READ_REGISTRY_TOKEN=$READ_REGISTRY_TOKEN"
      -i ansible/inventories/hosts.yml
      ansible/deploy.yml
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual
